var cricketwidget=function(){"use strict";function t(){}function n(t){return t()}function e(){return Object.create(null)}function r(t){t.forEach(n)}function o(t){return"function"==typeof t}function c(t,n){return t!=t?n==n:t!==n||t&&"object"==typeof t||"function"==typeof t}function a(t){t.parentNode.removeChild(t)}let s;function u(t){s=t}const i=[],l=[],d=[],f=[],h=Promise.resolve();let $=!1;function p(t){d.push(t)}const m=new Set;let g=0;function b(){const t=s;do{for(;g<i.length;){const t=i[g];g++,u(t),y(t.$$)}for(u(null),i.length=0,g=0;l.length;)l.pop()();for(let t=0;t<d.length;t+=1){const n=d[t];m.has(n)||(m.add(n),n())}d.length=0}while(i.length);for(;f.length;)f.pop()();$=!1,m.clear(),u(t)}function y(t){if(null!==t.fragment){t.update(),r(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(p)}}const _=new Set;function w(t,n){-1===t.$$.dirty[0]&&(i.push(t),$||($=!0,h.then(b)),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function v(c,i,l,d,f,h,$,m=[-1]){const g=s;u(c);const y=c.$$={fragment:null,ctx:null,props:h,update:t,not_equal:f,bound:e(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(i.context||(g?g.$$.context:[])),callbacks:e(),dirty:m,skip_bound:!1,root:i.target||g.$$.root};$&&$(y.root);let v=!1;if(y.ctx=l?l(c,i.props||{},((t,n,...e)=>{const r=e.length?e[0]:n;return y.ctx&&f(y.ctx[t],y.ctx[t]=r)&&(!y.skip_bound&&y.bound[t]&&y.bound[t](r),v&&w(c,t)),n})):[],y.update(),v=!0,r(y.before_update),y.fragment=!!d&&d(y.ctx),i.target){if(i.hydrate){const t=(L=i.target,Array.from(L.childNodes));y.fragment&&y.fragment.l(t),t.forEach(a)}else y.fragment&&y.fragment.c();i.intro&&((x=c.$$.fragment)&&x.i&&(_.delete(x),x.i(k))),function(t,e,c,a){const{fragment:s,on_mount:u,on_destroy:i,after_update:l}=t.$$;s&&s.m(e,c),a||p((()=>{const e=u.map(n).filter(o);i?i.push(...e):r(e),t.$$.on_mount=[]})),l.forEach(p)}(c,i.target,i.anchor,i.customElement),b()}var x,k,L;u(g)}async function x(){const t=document.getElementsByClassName("hello_cricket");let n=new URL(window.location);const e=new URLSearchParams(n.search).get("match")||null;try{const n=await fetch(`https://criscore.deno.dev/match/${e}`),r=await n.json();if(!1===r||"Data Not Found"===r.current){if(null!=t){k(t,"<br><b><p><code>Currently No Live Match</code></p><b><br>")}}else if(null!=t){k(t,`\n\t\t\t\t         <table>\n                 <tbody>\n                 <tr>\n                 <th>🏏 Match</th>\n                 <td>${r.title}</td>\n                 </tr>\n                 <tr>\n                 <th>📊 Status</th>\n                 <td>${r.update}</td>\n                 </tr>\n                 <tr>\n                 <th>🔴 Live</th>\n                 <td>${r.current}</td>\n                 </tr>\n                 <tr>\n                 <th>📉 Run rate</th>\n                 <td>${r.runrate}</td>\n                 </tr>\n                 <tr>\n                 <th>Current 🏏 Batsman</th>\n                 <td>${r.batsman} (${r.batsmanrun} Runs)</td>\n                 </tr>\n                 <tr>\n                 <th>Current 🏏 Bowler</th>\n                 <td>${r.bowler} - Overs ${r.bowlerover}</td>\n                 </tr>\n                 </tbody>\n                 </table>`)}}catch(n){if(null!=t){k(t,"<p>🔴 Connection Lost or Enter a valid Match URL</p>")}}}function k(t,n){for(let e=0;e<t.length;e++)t[e].innerHTML="<br><b><p><code>Fetching the Live Score 🔵</code></p><br><br>",setTimeout((()=>{t[e].innerHTML=n}),1e3)}function L(t){return x(),setInterval(x,12e4),[]}return new class extends class{$destroy(){!function(t,n){const e=t.$$;null!==e.fragment&&(r(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}(this,1),this.$destroy=t}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const t=e.indexOf(n);-1!==t&&e.splice(t,1)}}$set(t){var n;this.$$set&&(n=t,0!==Object.keys(n).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}{constructor(t){super(),v(this,t,L,null,c,{})}}({target:document.body})}();
//# sourceMappingURL=bundle.js.map
